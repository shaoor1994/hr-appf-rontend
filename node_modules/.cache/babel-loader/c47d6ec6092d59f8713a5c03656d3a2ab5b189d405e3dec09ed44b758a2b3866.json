{"ast":null,"code":"var _jsxFileName = \"E:\\\\Development\\\\PIAIC\\\\hr-appf-rontend\\\\hr-app\\\\src\\\\HrProjects.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import 'bootstrap/dist/css/bootstrap.css'; // Import Bootstrap CSS\n\n// const Projects = () => {\n//   return (\n//     <div className=\"container\">\n//       <h1>Team Leads</h1>\n//       <div className=\"row\">\n//         <div className=\"col-md-6\">\n//           <p>This is a column with Bootstrap classes.</p>\n//         </div>\n//         <div className=\"col-md-6\">\n//           <p>Another column with Bootstrap classes.</p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Projects;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.css';\n\n// const Projects = () => {\n//   const [leads, setLeads] = useState([]);\n//   const [newLead, setNewLead] = useState({ name: '', email: '' });\n//   const [selectedLead, setSelectedLead] = useState(null);\n//   const [editLead, setEditLead] = useState({});\n\n//   useEffect(() => {\n//     fetchLeads();\n//   }, []);\n\n//   const fetchLeads = async () => {\n//     try {\n//       const response = await axios.get('/api/Projects');\n//       setLeads(response.data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const createLead = async () => {\n//     try {\n//       await axios.post('/api/Projects', newLead);\n//       fetchLeads();\n//       setNewLead({ name: '', email: '' });\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const updateLead = async () => {\n//     try {\n//       await axios.put(`/api/Projects/${selectedLead.id}`, editLead);\n//       fetchLeads();\n//       setSelectedLead(null);\n//       setEditLead({});\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const deleteLead = async (leadId) => {\n//     try {\n//       await axios.delete(`/api/Projects/${leadId}`);\n//       fetchLeads();\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setNewLead({ ...newLead, [e.target.name]: e.target.value });\n//   };\n\n//   const handleEditInputChange = (e) => {\n//     setEditLead({ ...editLead, [e.target.name]: e.target.value });\n//   };\n\n//   const selectLead = (lead) => {\n//     setSelectedLead(lead);\n//     setEditLead(lead);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Projects</h1>\n//       <div className=\"mb-3\">\n//         <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\n//         <input type=\"text\" className=\"form-control\" id=\"nameInput\" name=\"name\" value={newLead.name} onChange={handleInputChange} />\n//       </div>\n//       <div className=\"mb-3\">\n//         <label htmlFor=\"emailInput\" className=\"form-label\">Email:</label>\n//         <input type=\"email\" className=\"form-control\" id=\"emailInput\" name=\"email\" value={newLead.email} onChange={handleInputChange} />\n//       </div>\n//       <button className=\"btn btn-primary mb-3\" onClick={createLead}>Add Lead</button>\n//       <table className=\"table table-striped\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {leads.map((lead) => (\n//             <tr key={lead.id}>\n//               <td>{lead.name}</td>\n//               <td>{lead.email}</td>\n//               <td>\n//                 <button className=\"btn btn-sm btn-primary me-2\" onClick={() => selectLead(lead)}>Edit</button>\n//                 <button className=\"btn btn-sm btn-danger\" onClick={() => deleteLead(lead.id)}>Delete</button>\n//              </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {selectedLead && (\n//         <div>\n//           <h3>Edit Lead</h3>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"editNameInput\" className=\"form-label\">Name:</label>\n//             <input type=\"text\" className=\"form-control\" id=\"editNameInput\" name=\"name\" value={editLead.name} onChange={handleEditInputChange} />\n//           </div>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"editEmailInput\" className=\"form-label\">Email:</label>\n//             <input type=\"email\" className=\"form-control\" id=\"editEmailInput\" name=\"email\" value={editLead.email} onChange={handleEditInputChange} />\n//           </div>\n//           <button className=\"btn btn-primary me-2\" onClick={updateLead}>Save</button>\n//           <button className=\"btn btn-secondary\" onClick={() => setSelectedLead(null)}>Cancel</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Projects;\n// Projects.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [teamLeads, setTeamLeads] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState('');\n  const [selectedLead, setSelectedLead] = useState('');\n  const [newProject, setNewProject] = useState({\n    projectName: '',\n    developerName: ''\n  });\n  useEffect(() => {\n    fetchTeamLeads();\n    fetchProjects();\n  }, []);\n  const fetchTeamLeads = async () => {\n    try {\n      axios.defaults.baseURL = 'http://localhost:5000';\n      const response = await axios.get('/api/teamleads');\n      setTeamLeads(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchProjects = async id => {\n    try {\n      axios.defaults.baseURL = `http://localhost:5000`;\n      const response = await axios.get(`/api/projects$`);\n      setProjects(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleInputChange = e => {\n    setNewProject({\n      ...newProject,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSelectChange = e => {\n    setSelectedLead(e.target.value);\n  };\n  const createProject = async () => {\n    try {\n      const {\n        projectName,\n        developerName\n      } = newProject;\n      axios.defaults.baseURL = 'http://localhost:5000';\n      const response = await axios.post('/api/projects', {\n        projectName,\n        developerName,\n        teamLeadId: selectedLead\n      });\n      fetchProjects();\n      setNewProject({\n        projectName: '',\n        developerName: ''\n      });\n      if (response.status === 201) {\n        toast.success('Project added successfully', {\n          position: 'top-right',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      } else {\n        toast.error('Failed to add project', {\n          position: 'top-right',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('Failed to add project', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n  };\n  const updateProject = async id => {\n    const updateProject = async id => {\n      try {\n        const projectToUpdate = projects.find(project => project.id === id);\n        if (!projectToUpdate) {\n          toast.error('Project not found', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          });\n          return;\n        }\n\n        // Implement the logic to update the project here\n        const updatedProject = {\n          ...projectToUpdate,\n          projectName: 'Updated Project Name',\n          developerName: 'Updated Developer Name'\n        };\n        axios.defaults.baseURL = 'http://localhost:5000';\n        const response = await axios.put(`/api/projects/${id}`, updatedProject);\n        if (response.status === 200) {\n          toast.success('Project updated successfully', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          });\n          fetchProjects(); // Refresh the projects list after successful update\n        } else {\n          toast.error('Failed to update project', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        toast.error('Failed to update project', {\n          position: 'top-right',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }\n    };\n  };\n  const getProjectById = async () => {\n    try {\n      const response = await axios.get(`/api/projects/${selectedProject}`);\n      console.log(response.data); // Log the project data fetched by ID\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const deleteProject = async id => {\n    //const deleteProject = async (id) => {\n    try {\n      // Implement the logic to delete the project here\n      axios.defaults.baseURL = 'http://localhost:5000';\n      const response = await axios.delete(`/api/projects/${id}`);\n      if (response.status === 200) {\n        toast.success('Project deleted successfully', {\n          position: 'top-right',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        fetchProjects(); // Refresh the projects list after successful delete\n      } else {\n        toast.error('Failed to delete project', {\n          position: 'top-right',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('Failed to delete project', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n    // };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"leadSelect\",\n        className: \"form-label\",\n        children: \"Select Team Lead:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        id: \"leadSelect\",\n        value: selectedLead,\n        onChange: handleSelectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Team Lead --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), teamLeads.map(lead => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lead.id,\n          children: lead.name\n        }, lead.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"projectNameInput\",\n        className: \"form-label\",\n        children: \"Project Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"projectNameInput\",\n        name: \"projectName\",\n        value: newProject.projectName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"developerNameInput\",\n        className: \"form-label\",\n        children: \"Developer Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"developerNameInput\",\n        name: \"developerName\",\n        value: newProject.developerName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: createProject,\n      children: \"Add Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Developer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team Lead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: projects.map(project => {\n          var _project$teamLead;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: project.developerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_project$teamLead = project.teamLead) === null || _project$teamLead === void 0 ? void 0 : _project$teamLead.name) || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-sm\",\n                onClick: () => updateProject(project.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm\",\n                onClick: () => deleteProject(project.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"1IOtcCKEsbT5Zt4gOimng9MTtS4=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","Projects","_s","teamLeads","setTeamLeads","projects","setProjects","selectedProject","setSelectedProject","selectedLead","setSelectedLead","newProject","setNewProject","projectName","developerName","fetchTeamLeads","fetchProjects","defaults","baseURL","response","get","data","error","console","id","handleInputChange","e","target","name","value","handleSelectChange","createProject","post","teamLeadId","status","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","updateProject","projectToUpdate","find","project","updatedProject","put","getProjectById","log","deleteProject","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","map","lead","type","onClick","_project$teamLead","teamLead","_c","$RefreshReg$"],"sources":["E:/Development/PIAIC/hr-appf-rontend/hr-app/src/HrProjects.jsx"],"sourcesContent":["// import React from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.css'; // Import Bootstrap CSS\r\n\r\n// const Projects = () => {\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Team Leads</h1>\r\n//       <div className=\"row\">\r\n//         <div className=\"col-md-6\">\r\n//           <p>This is a column with Bootstrap classes.</p>\r\n//         </div>\r\n//         <div className=\"col-md-6\">\r\n//           <p>Another column with Bootstrap classes.</p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Projects;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// const Projects = () => {\r\n//   const [leads, setLeads] = useState([]);\r\n//   const [newLead, setNewLead] = useState({ name: '', email: '' });\r\n//   const [selectedLead, setSelectedLead] = useState(null);\r\n//   const [editLead, setEditLead] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     fetchLeads();\r\n//   }, []);\r\n\r\n//   const fetchLeads = async () => {\r\n//     try {\r\n//       const response = await axios.get('/api/Projects');\r\n//       setLeads(response.data);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const createLead = async () => {\r\n//     try {\r\n//       await axios.post('/api/Projects', newLead);\r\n//       fetchLeads();\r\n//       setNewLead({ name: '', email: '' });\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const updateLead = async () => {\r\n//     try {\r\n//       await axios.put(`/api/Projects/${selectedLead.id}`, editLead);\r\n//       fetchLeads();\r\n//       setSelectedLead(null);\r\n//       setEditLead({});\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteLead = async (leadId) => {\r\n//     try {\r\n//       await axios.delete(`/api/Projects/${leadId}`);\r\n//       fetchLeads();\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setNewLead({ ...newLead, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleEditInputChange = (e) => {\r\n//     setEditLead({ ...editLead, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const selectLead = (lead) => {\r\n//     setSelectedLead(lead);\r\n//     setEditLead(lead);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Projects</h1>\r\n//       <div className=\"mb-3\">\r\n//         <label htmlFor=\"nameInput\" className=\"form-label\">Name:</label>\r\n//         <input type=\"text\" className=\"form-control\" id=\"nameInput\" name=\"name\" value={newLead.name} onChange={handleInputChange} />\r\n//       </div>\r\n//       <div className=\"mb-3\">\r\n//         <label htmlFor=\"emailInput\" className=\"form-label\">Email:</label>\r\n//         <input type=\"email\" className=\"form-control\" id=\"emailInput\" name=\"email\" value={newLead.email} onChange={handleInputChange} />\r\n//       </div>\r\n//       <button className=\"btn btn-primary mb-3\" onClick={createLead}>Add Lead</button>\r\n//       <table className=\"table table-striped\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Email</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {leads.map((lead) => (\r\n//             <tr key={lead.id}>\r\n//               <td>{lead.name}</td>\r\n//               <td>{lead.email}</td>\r\n//               <td>\r\n//                 <button className=\"btn btn-sm btn-primary me-2\" onClick={() => selectLead(lead)}>Edit</button>\r\n//                 <button className=\"btn btn-sm btn-danger\" onClick={() => deleteLead(lead.id)}>Delete</button>\r\n//              </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {selectedLead && (\r\n//         <div>\r\n//           <h3>Edit Lead</h3>\r\n//           <div className=\"mb-3\">\r\n//             <label htmlFor=\"editNameInput\" className=\"form-label\">Name:</label>\r\n//             <input type=\"text\" className=\"form-control\" id=\"editNameInput\" name=\"name\" value={editLead.name} onChange={handleEditInputChange} />\r\n//           </div>\r\n//           <div className=\"mb-3\">\r\n//             <label htmlFor=\"editEmailInput\" className=\"form-label\">Email:</label>\r\n//             <input type=\"email\" className=\"form-control\" id=\"editEmailInput\" name=\"email\" value={editLead.email} onChange={handleEditInputChange} />\r\n//           </div>\r\n//           <button className=\"btn btn-primary me-2\" onClick={updateLead}>Save</button>\r\n//           <button className=\"btn btn-secondary\" onClick={() => setSelectedLead(null)}>Cancel</button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Projects;\r\n// Projects.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Projects = () => {\r\n  const [teamLeads, setTeamLeads] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [selectedProject, setSelectedProject] = useState('');\r\n  const [selectedLead, setSelectedLead] = useState('');\r\n  const [newProject, setNewProject] = useState({ projectName: '', developerName: '' });\r\n\r\n  useEffect(() => {\r\n    fetchTeamLeads();\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchTeamLeads = async () => {\r\n    try {\r\n      axios.defaults.baseURL = 'http://localhost:5000';\r\n      const response = await axios.get('/api/teamleads');\r\n      setTeamLeads(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const fetchProjects = async (id) => {\r\n    try {\r\n      axios.defaults.baseURL = `http://localhost:5000`;\r\n      const response = await axios.get(`/api/projects$`);\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewProject({ ...newProject, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedLead(e.target.value);\r\n  };\r\n\r\n  const createProject = async () => {\r\n    try {\r\n      const { projectName, developerName } = newProject;\r\n      axios.defaults.baseURL = 'http://localhost:5000';\r\n      const response = await axios.post('/api/projects', { projectName, developerName, teamLeadId: selectedLead });\r\n      fetchProjects();\r\n      setNewProject({ projectName: '', developerName: '' });\r\n\r\n      if (response.status === 201) {\r\n        toast.success('Project added successfully', {\r\n          position: 'top-right',\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      } else {\r\n        toast.error('Failed to add project', {\r\n          position: 'top-right',\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error('Failed to add project', {\r\n        position: 'top-right',\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateProject = async (id) => {\r\n    const updateProject = async (id) => {\r\n      try {\r\n        const projectToUpdate = projects.find((project) => project.id === id);\r\n        if (!projectToUpdate) {\r\n          toast.error('Project not found', {\r\n            position: 'top-right',\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n          return;\r\n        }\r\n    \r\n        // Implement the logic to update the project here\r\n        const updatedProject = { ...projectToUpdate, projectName: 'Updated Project Name', developerName: 'Updated Developer Name' };\r\n        axios.defaults.baseURL = 'http://localhost:5000';\r\n        const response = await axios.put(`/api/projects/${id}`, updatedProject);\r\n        if (response.status === 200) {\r\n          toast.success('Project updated successfully', {\r\n            position: 'top-right',\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n          fetchProjects(); // Refresh the projects list after successful update\r\n        } else {\r\n          toast.error('Failed to update project', {\r\n            position: 'top-right',\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error('Failed to update project', {\r\n          position: 'top-right',\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      }\r\n    };\r\n    \r\n  };\r\n  const getProjectById = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/projects/${selectedProject}`);\r\n      console.log(response.data); // Log the project data fetched by ID\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const deleteProject = async (id) => {\r\n    //const deleteProject = async (id) => {\r\n      try {\r\n        // Implement the logic to delete the project here\r\n        axios.defaults.baseURL = 'http://localhost:5000';\r\n        const response = await axios.delete(`/api/projects/${id}`);\r\n        if (response.status === 200) {\r\n          toast.success('Project deleted successfully', {\r\n            position: 'top-right',\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n          fetchProjects(); // Refresh the projects list after successful delete\r\n        } else {\r\n          toast.error('Failed to delete project', {\r\n            position: 'top-right',\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error('Failed to delete project', {\r\n          position: 'top-right',\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n        });\r\n      }\r\n   // };\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Projects</h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"leadSelect\" className=\"form-label\">Select Team Lead:</label>\r\n        <select className=\"form-select\" id=\"leadSelect\" value={selectedLead} onChange={handleSelectChange}>\r\n          <option value=\"\">-- Select Team Lead --</option>\r\n          {teamLeads.map((lead) => (\r\n            <option key={lead.id} value={lead.id}>{lead.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"projectNameInput\" className=\"form-label\">Project Name:</label>\r\n        <input type=\"text\" className=\"form-control\" id=\"projectNameInput\" name=\"projectName\" value={newProject.projectName} onChange={handleInputChange} />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"developerNameInput\" className=\"form-label\">Developer Name:</label>\r\n        <input type=\"text\" className=\"form-control\" id=\"developerNameInput\" name=\"developerName\" value={newProject.developerName} onChange={handleInputChange} />\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={createProject}>Add Project</button>\r\n\r\n      <h2>Projects List</h2>\r\n      {/* <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Project Name</th>\r\n            <th>Developer Name</th>\r\n            <th>Team Lead</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map((project) => (\r\n            <tr key={project.id}>\r\n              <td>{project.projectName}</td>\r\n              <td>{project.developerName}</td>\r\n              <td>{project.teamLead.name}</td>\r\n              <td>\r\n                <button className=\"btn btn-sm btn-primary\" onClick={() => updateProject(project.id)}>Edit</button>\r\n              </td>\r\n              <td>\r\n                <button className=\"btn btn-sm btn-danger\" onClick={() => deleteProject(project.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> */}\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Project Name</th>\r\n            <th>Developer Name</th>\r\n            <th>Team Lead</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {projects.map((project) => (\r\n            <tr key={project.id}>\r\n              <td>{project.projectName}</td>\r\n              <td>{project.developerName}</td>\r\n              <td>{project.teamLead?.name || 'N/A'}</td> {/* Use optional chaining to avoid undefined error */}\r\n              <td>\r\n                <button className=\"btn btn-primary btn-sm\" onClick={() => updateProject(project.id)}>\r\n                  Edit\r\n                </button>\r\n                <button className=\"btn btn-danger btn-sm\" onClick={() => deleteProject(project.id)}>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,WAAW,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAG,CAAC,CAAC;EAEpFlB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"},"metadata":{},"sourceType":"module","externalDependencies":[]}